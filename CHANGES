Revision history for Perl module Math::PRBS.

v0.001_002
    - add ->description(): lists the polynomial string
    - add ->taps(): returns a new array-ref containing the LFSR taps
    - add ->oeis_anum(): lists OEIS# for known taps, or undef if unknown
    - add ->period([force => 'estimate'/$n/'max']): return period if defined;
        else if estimate, return 2**k - 1;
        else if max, search until 2**k - 1, and return either undef or period
        else if $n, search until $n, and return either undef or period
    - add ->tell_i()
    - add ->tell_state(): tells the internal state (the value of the shift
        register)
    - add ->generate_all() and ->generate_to_end(): generates the whole list
        or continues the list from where you left off; scalar context
        gives a string, list context returns the list of values
    - add ->generate(n): generate the next n values from the sequence;
        scalar context => string, list context => array
    - add ->seek_to_i($i): if $i < tell_i(), run ->rewind first.  Loop from
        tell_i or 0 to $i
    - add ->ith($i): alias for seek_to_i()
    - add ->seek_to_state($state): loop until ->tell_state() equals $state
    - add ->seek_forward($n): advance forward $n, but just return the last
    TODO
    - ->seek_to_end(): loop until {i} is at {period}; include limit=>n

v0.001_001
    - Initial experiments
