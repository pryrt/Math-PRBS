Revision history for Perl module Math::PRBS.

v0.001_002
    - add ->description(): lists the polynomial string
    - add ->taps(): returns a new array-ref containing the LFSR taps
    - add ->oeis_anum(): lists OEIS# for known taps, or undef if unknown
    - add ->period([force]): if period defined, return period;
        if undefined and force, then iterate thru all up to 2**23-1
        if forceBig, iterate thru all
    - add ->tell_i()
    - add ->tell_state(): tells the internal state (the value of the shift
        register)
    - add ->generate_all() and ->generate_to_end(): generates the whole list
        or continues the list from where you left off; scalar context
        gives a string, list context returns the list of values
    - ->generate(n): generate the next n values from the sequence;
        scalar context => string, list context => array
    TODO
    - ->seek_to_i($i): if $i < tell_i(), run ->rewind first.  Loop from
        tell_i or 0 to $i
    - ->ith($i): alias for seek_to_i()
    - ->seek_to_state($state): loop until ->tell_state() equals $state
    TODO
    - look into memory issues: dmake test uses about 0.5GB (and cover maxes memory)

v0.001_001
    - Initial experiments
